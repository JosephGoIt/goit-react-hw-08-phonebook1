{"version":3,"file":"static/js/119.38a5f461.chunk.js","mappings":"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","sources":["redux/tasks/selectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactList/ContactListItem.module.css?16c0","components/ContactList/ContactListItem.jsx","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["export const selectContacts = (state) => state.contacts?.items || [];\nexport const selectFilter = (state) => state.filter;\nexport const selectIsLoading = (state) => state.contacts?.isLoading;\nexport const selectError = (state) => state.contacts?.error;","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"formField\":\"ContactForm_formField__O5fo+\",\"formLabel\":\"ContactForm_formLabel__TSwxK\",\"formButton\":\"ContactForm_formButton__TN6Jq\"};","import React from 'react';\nimport{ useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/tasks/contactSlice';\nimport { selectContacts } from '../../redux/tasks/selectors';\nimport css from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const handleNameChange = (e) => {\n    setName(e.target.value);\n  };\n\n  const handlePhoneChange = (e) => {\n    setPhone(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (name.trim() === '' || phone.trim() === '') {\n      return;\n    }\n\n    const nameExists = contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase());\n    if (nameExists) {\n      alert(`${name} already exists in contacts!`);\n      return;\n    }\n\n    dispatch(addContact({ name, phone }));\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.formField}>\n        <p className={css.formLabel}>Name</p>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Za-яА-Я]+(([' \\-][a-zA-Za-яА-Я ])?[a-zA-Za-яА-Я]*)*$\"\n          value={name}\n          onChange={handleNameChange}\n          required\n          placeholder=\"Enter name\"\n        />\n      </label>\n\n      <label className={css.formField}>\n        <p className={css.formLabel}>Number</p>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n          value={phone}\n          onChange={handlePhoneChange}\n          required\n          placeholder=\"Enter number\"\n        />\n      </label>\n\n      <button className={css.formButton} type=\"submit\">\n        Add Contact\n      </button>\n    </form>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Filter_container__L5eml\"};","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport css from './Filter.module.css';\nimport { setFilter } from '../../redux/tasks/filterSlice';\nimport { selectFilter } from '../../redux/tasks/selectors';\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n    const filter = useSelector(selectFilter);\n  \n    const onFilterChange = (e) => {\n      dispatch(setFilter(e.target.value));\n    };\n  \n    return (\n      <div className={css.container}>\n        <p>Find Contacts by Name</p>\n        <input\n          type=\"text\"\n          name=\"filter\"\n          placeholder=\"Search by name\"\n          value={filter}\n          onChange={onFilterChange}\n        />\n      </div>\n    );\n  };","// extracted by mini-css-extract-plugin\nexport default {\"contactListItem\":\"ContactListItem_contactListItem__7AdNI\",\"contactAlign\":\"ContactListItem_contactAlign__0Bn72\",\"btncon\":\"ContactListItem_btncon__4fb02\",\"contcon\":\"ContactListItem_contcon__o-Hys\",\"btnDelete\":\"ContactListItem_btnDelete__jyC1S\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './ContactListItem.module.css';\n\nconst ContactListItem = ({ contact, deleteContact }) => {\n  const handleDelete = () => {\n    deleteContact(contact.id);\n  };\n\n  return (\n    <li className={css.contactListItem}>\n      <div className={css.contactAlign}> \n        <div className={css.contcon}>{contact.name}</div>\n        <div className={css.contcon}>{contact.phone}</div>\n      </div>\n      <div className={css.btncon}>\n      <button onClick={handleDelete}>Delete</button>\n      </div>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n  }).isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ContactListItem from './ContactListItem';\nimport { selectContacts, selectFilter} from '../../redux/tasks/selectors';\nimport { deleteContact } from '../../redux/tasks/contactSlice';\n\nexport const ContactList = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts);\n    const filter = useSelector(selectFilter);\n    // const isLoading = useSelector(selectIsLoading);\n    // const error = useSelector(selectError);\n  \n    const filteredContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  \n    return (\n      <>\n        {/* {isLoading && <p>Loading...</p>}\n        {error && <p>Error: {error}</p>} */}\n        <ul>\n          {filteredContacts.map(contact => (\n            <ContactListItem key={contact.id} contact={contact} deleteContact={() => dispatch(deleteContact(contact.id))} />\n          ))}\n        </ul>\n      </>\n    );\n  };\n  \n  ","import { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { Helmet } from 'react-helmet';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList'\nimport { store } from '../redux/store';\nimport { fetchContacts } from '../redux/tasks/contactSlice';\n\n// import { selectIsLoading } from '../redux/tasks/selectors';\n\nexport default function Tasks() {\n  // const dispatch = useDispatch();\n  // const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    store.dispatch(fetchContacts());\n  }, []);\n\n  return (\n    <>\n      {/* <Helmet>\n        <title>Your tasks</title>\n      </Helmet> */}\n      <ContactForm />\n      {/* {<div>{isLoading && 'Request in progress...'}</div>} */}\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["selectContacts","state","_state$contacts","contacts","items","selectFilter","filter","ContactForm","dispatch","useDispatch","useSelector","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","phone","setPhone","_jsxs","className","css","onSubmit","e","preventDefault","trim","find","contact","toLowerCase","alert","concat","addContact","children","_jsx","type","pattern","value","onChange","target","required","placeholder","Filter","setFilter","_ref","deleteContact","onClick","id","ContactList","filteredContacts","includes","_Fragment","map","ContactListItem","Tasks","useEffect","store","fetchContacts"],"sourceRoot":""}